/*
LESS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: @icon-home-width;
}

The large array-like variables contain all information about a single icon
@icon-home: x y offset_x offset_y width height total_width total_height image_path name;

At the bottom of this section, we provide information about the spritesheet itself
@spritesheet: width height image @spritesheet-sprites;
*/
@icon-left-name: 'icon-left';
@icon-left-x: 0px;
@icon-left-y: 0px;
@icon-left-offset-x: 0px;
@icon-left-offset-y: 0px;
@icon-left-width: 34px;
@icon-left-height: 34px;
@icon-left-total-width: 102px;
@icon-left-total-height: 63px;
@icon-left-image: '../img/sprite.png';
@icon-left: 0px 0px 0px 0px 34px 34px 102px 63px '../img/sprite.png' 'icon-left';
@icon-right-name: 'icon-right';
@icon-right-x: 39px;
@icon-right-y: 0px;
@icon-right-offset-x: -39px;
@icon-right-offset-y: 0px;
@icon-right-width: 34px;
@icon-right-height: 34px;
@icon-right-total-width: 102px;
@icon-right-total-height: 63px;
@icon-right-image: '../img/sprite.png';
@icon-right: 39px 0px -39px 0px 34px 34px 102px 63px '../img/sprite.png' 'icon-right';
@portfolio-dark-name: 'portfolio-dark';
@portfolio-dark-x: 78px;
@portfolio-dark-y: 29px;
@portfolio-dark-offset-x: -78px;
@portfolio-dark-offset-y: -29px;
@portfolio-dark-width: 24px;
@portfolio-dark-height: 20px;
@portfolio-dark-total-width: 102px;
@portfolio-dark-total-height: 63px;
@portfolio-dark-image: '../img/sprite.png';
@portfolio-dark: 78px 29px -78px -29px 24px 20px 102px 63px '../img/sprite.png' 'portfolio-dark';
@social-fb-name: 'social-fb';
@social-fb-x: 0px;
@social-fb-y: 39px;
@social-fb-offset-x: 0px;
@social-fb-offset-y: -39px;
@social-fb-width: 24px;
@social-fb-height: 24px;
@social-fb-total-width: 102px;
@social-fb-total-height: 63px;
@social-fb-image: '../img/sprite.png';
@social-fb: 0px 39px 0px -39px 24px 24px 102px 63px '../img/sprite.png' 'social-fb';
@social-journal-name: 'social-journal';
@social-journal-x: 29px;
@social-journal-y: 39px;
@social-journal-offset-x: -29px;
@social-journal-offset-y: -39px;
@social-journal-width: 24px;
@social-journal-height: 24px;
@social-journal-total-width: 102px;
@social-journal-total-height: 63px;
@social-journal-image: '../img/sprite.png';
@social-journal: 29px 39px -29px -39px 24px 24px 102px 63px '../img/sprite.png' 'social-journal';
@social-vk-name: 'social-vk';
@social-vk-x: 78px;
@social-vk-y: 0px;
@social-vk-offset-x: -78px;
@social-vk-offset-y: 0px;
@social-vk-width: 24px;
@social-vk-height: 24px;
@social-vk-total-width: 102px;
@social-vk-total-height: 63px;
@social-vk-image: '../img/sprite.png';
@social-vk: 78px 0px -78px 0px 24px 24px 102px 63px '../img/sprite.png' 'social-vk';
@spritesheet-width: 102px;
@spritesheet-height: 63px;
@spritesheet-image: '../img/sprite.png';
@spritesheet-sprites: @icon-left @icon-right @portfolio-dark @social-fb @social-journal @social-vk;
@spritesheet: 102px 63px '../img/sprite.png' @spritesheet-sprites;

/*
The provided classes are intended to be used with the array-like variables

.icon-home {
  .sprite-width(@icon-home);
}
.icon-email {
  .sprite(@icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
.sprite-width(@sprite) {
  width: extract(@sprite, 5);
}

.sprite-height(@sprite) {
  height: extract(@sprite, 6);
}

.sprite-position(@sprite) {
  @sprite-offset-x: extract(@sprite, 3);
  @sprite-offset-y: extract(@sprite, 4);
  background-position: @sprite-offset-x @sprite-offset-y;
}

.sprite-image(@sprite) {
  @sprite-image: extract(@sprite, 9);
  @sprite-image-bare: ~`"@{sprite-image}".slice(1, -1)`;
  background-image: url(@sprite-image-bare);
}

.sprite(@sprite) {
  .sprite-image(@sprite);
  .sprite-position(@sprite);
  .sprite-width(@sprite);
  .sprite-height(@sprite);
}

/*
The `.sprites` mixin generates identical output to the CSS template
  but can be overridden inside of LESS

This must be run when you have at least 2 sprites.
  If run with a single sprite, then there will be reference errors.

.sprites(@spritesheet-sprites);
*/
.sprites(@sprites, @i: 1) when (@i <= length(@sprites)) {
  @sprite: extract(@sprites, @i);
  @sprite-name: e(extract(@sprite, 10));
  .@{sprite-name} {
    .sprite(@sprite);
  }
  .sprites(@sprites, @i + 1);
}
